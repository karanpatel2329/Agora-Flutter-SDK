group 'io.agora.agora_rtc_ng'
version '1.0-SNAPSHOT'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }

}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 31)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)

        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        if (isDev(project)) {
           main.jniLibs.srcDirs += 'libs'
        }
    }
}

dependencies {
    if (isDev(project)) {
        implementation fileTree(dir: "libs", include: ["*.jar"])
    } else {
        api 'io.agora.rtc:iris-rtc:4.1.0-rc.2'
//        api 'io.agora.rtc:full-sdk:4.1.0-1'
//        implementation 'io.agora.rtc:full-screen-sharing:4.1.0-1'
    }
    def agora_sdk_version = "4.1.0"

    implementation "io.agora.rtc:full-rtc-basic:${agora_sdk_version}"
    implementation "io.agora.rtc:full-ains:3.7.0"
    implementation "io.agora.rtc:full-jnd:3.7.2.1"
    implementation "io.agora.rtc:full-full-audio-format:3.7.0"
    implementation "io.agora.rtc:full-super-resolution:${agora_sdk_version}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${safeExtGet('kotlin_version', "1.7.21")}"

}

static boolean isDev(Project project) {
  def devFile = project.file('.plugin_dev')
  return devFile.exists()
}
